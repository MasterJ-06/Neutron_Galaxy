package neutrongalaxy.masterj.neutrongalaxy.dataGen;

import net.minecraft.advancements.critereon.ItemPredicate;
import net.minecraft.data.DataGenerator;
import net.minecraft.data.recipes.FinishedRecipe;
import net.minecraft.data.recipes.RecipeProvider;
import net.minecraft.data.recipes.ShapedRecipeBuilder;
import net.minecraft.data.recipes.ShapelessRecipeBuilder;
import net.minecraft.world.item.Items;
import net.minecraftforge.common.crafting.conditions.IConditionBuilder;
import neutrongalaxy.masterj.neutrongalaxy.init.BlockInit;
import neutrongalaxy.masterj.neutrongalaxy.init.ItemInit;

import java.util.function.Consumer;

public class ModRecipeProvider extends RecipeProvider implements IConditionBuilder {

    public ModRecipeProvider(DataGenerator generator) {
        super(generator);
    }

    @Override
    protected void buildCraftingRecipes(Consumer<FinishedRecipe> finishedRecipeConsumer) {
        ShapelessRecipeBuilder.shapeless(ItemInit.ALUMINIUM_INGOT.get(), 9)
                .requires(BlockInit.ALUMINIUM_BLOCK.get())
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.BRASS_INGOT.get(), 9)
                .requires(BlockInit.BRASS_BLOCK.get())
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.BRONZE_INGOT.get(), 9)
                .requires(BlockInit.BRONZE_BLOCK.get())
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.COBALT_INGOT.get(), 9)
                .requires(BlockInit.COBALT_BLOCK.get())
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.NICKEL_INGOT.get(), 9)
                .requires(BlockInit.NICKEL_BLOCK.get())
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.PLATINUM_INGOT.get(), 9)
                .requires(BlockInit.PLATINUM_BLOCK.get())
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.RUBY.get(), 9)
                .requires(BlockInit.RUBY_BLOCK.get())
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.SILVER_INGOT.get(), 9)
                .requires(BlockInit.SILVER_BLOCK.get())
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.STEEL_INGOT.get(), 9)
                .requires(BlockInit.STEEL_BLOCK.get())
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapelessRecipeBuilder.shapeless(ItemInit.TIN_INGOT.get(), 9)
                .requires(BlockInit.TIN_BLOCK.get())
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.ALUMINIUM_BLOCK.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.BRASS_BLOCK.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.BRONZE_BLOCK.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.COBALT_BLOCK.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.NICKEL_BLOCK.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.PLATINUM_BLOCK.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.RUBY_BLOCK.get())
                .define('A', ItemInit.RUBY.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.SILVER_BLOCK.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.STEEL_BLOCK.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.TIN_BLOCK.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .pattern("AAA")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_HELMET.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_CHESTPLATE.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_LEGGINGS.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_BOOTS.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_HELMET.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_CHESTPLATE.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_LEGGINGS.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_BOOTS.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_HELMET.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_CHESTPLATE.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_LEGGINGS.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_BOOTS.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_HELMET.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_CHESTPLATE.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_LEGGINGS.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_BOOTS.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_HELMET.get())
                .define('A', Items.COPPER_INGOT)
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_CHESTPLATE.get())
                .define('A', Items.COPPER_INGOT)
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_LEGGINGS.get())
                .define('A', Items.COPPER_INGOT)
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_BOOTS.get())
                .define('A', Items.COPPER_INGOT)
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_HELMET.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_CHESTPLATE.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_LEGGINGS.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_BOOTS.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_HELMET.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_CHESTPLATE.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_LEGGINGS.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_BOOTS.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_HELMET.get())
                .define('A', ItemInit.RUBY.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_CHESTPLATE.get())
                .define('A', ItemInit.RUBY.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_LEGGINGS.get())
                .define('A', ItemInit.RUBY.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_BOOTS.get())
                .define('A', ItemInit.RUBY.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_ruby", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_HELMET.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_CHESTPLATE.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_LEGGINGS.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_BOOTS.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_HELMET.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_CHESTPLATE.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_LEGGINGS.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_BOOTS.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_HELMET.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_CHESTPLATE.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .pattern("A A")
                .pattern("AAA")
                .pattern("AAA")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_LEGGINGS.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .pattern("AAA")
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_BOOTS.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .pattern("A A")
                .pattern("A A")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_SWORD.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_PICKAXE.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_SHOVEL.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_AXE.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_HOE.get())
                .define('A', ItemInit.ALUMINIUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_SWORD.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_PICKAXE.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_SHOVEL.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_AXE.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRASS_HOE.get())
                .define('A', ItemInit.BRASS_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_brass_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRASS_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_SWORD.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_PICKAXE.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_SHOVEL.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_AXE.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.BRONZE_HOE.get())
                .define('A', ItemInit.BRONZE_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_bronze_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.BRONZE_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_SWORD.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_PICKAXE.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_SHOVEL.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_AXE.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COBALT_HOE.get())
                .define('A', ItemInit.COBALT_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_cobalt_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.COBALT_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_SWORD.get())
                .define('A', Items.COPPER_INGOT)
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_PICKAXE.get())
                .define('A', Items.COPPER_INGOT)
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_SHOVEL.get())
                .define('A', Items.COPPER_INGOT)
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_AXE.get())
                .define('A', Items.COPPER_INGOT)
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COPPER_HOE.get())
                .define('A', Items.COPPER_INGOT)
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_copper_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.COPPER_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_SWORD.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_PICKAXE.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_SHOVEL.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_AXE.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.NICKEL_HOE.get())
                .define('A', ItemInit.NICKEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_nickel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.NICKEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_SWORD.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_PICKAXE.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_SHOVEL.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_AXE.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.PLATINUM_HOE.get())
                .define('A', ItemInit.PLATINUM_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_platinum_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.PLATINUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_SWORD.get())
                .define('A', ItemInit.RUBY.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_ruby_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_PICKAXE.get())
                .define('A', ItemInit.RUBY.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_ruby_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_SHOVEL.get())
                .define('A', ItemInit.RUBY.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_ruby_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_AXE.get())
                .define('A', ItemInit.RUBY.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_ruby_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.RUBY_HOE.get())
                .define('A', ItemInit.RUBY.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_ruby_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.RUBY.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_SWORD.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_PICKAXE.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_SHOVEL.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_AXE.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.SILVER_HOE.get())
                .define('A', ItemInit.SILVER_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_silver_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILVER_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_SWORD.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_PICKAXE.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_SHOVEL.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_AXE.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_HOE.get())
                .define('A', ItemInit.STEEL_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_SWORD.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("A")
                .pattern("S")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_PICKAXE.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AAA")
                .pattern(" S ")
                .pattern(" S ")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_SHOVEL.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .define('S', Items.STICK)
                .pattern("A")
                .pattern("S")
                .pattern("S")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_AXE.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern("AS")
                .pattern(" S")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.TIN_HOE.get())
                .define('A', ItemInit.TIN_INGOT.get())
                .define('S', Items.STICK)
                .pattern("AA")
                .pattern(" S")
                .pattern(" S")
                .unlockedBy("has_tin_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.TIN_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ROCKET.get())
                .define('P', ItemInit.STEEL_PLATE.get())
                .define('W', ItemInit.ROCKET_WINDOW.get())
                .define('S', ItemInit.SILICON.get())
                .pattern(" S ")
                .pattern("SWS")
                .pattern("PPP")
                .unlockedBy("has_silicon_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILICON.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(BlockInit.LAUNCH_PAD.get())
                .define('P', ItemInit.ALUMINIUM_PLATE.get())
                .define('I', ItemInit.IRON_PLATE.get())
                .pattern("PPP")
                .pattern("PIP")
                .pattern("PPP")
                .unlockedBy("has_aluminium_plate", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_PLATE.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.STEEL_PLATE.get())
                    .define('P', ItemInit.STEEL_INGOT.get())
                .pattern("PP")
                .pattern("PP")
                .unlockedBy("has_steel_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.STEEL_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ALUMINIUM_PLATE.get())
                .define('P', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("PP")
                .pattern("PP")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.IRON_PLATE.get())
                .define('P', Items.IRON_INGOT)
                .pattern("PP")
                .pattern("PP")
                .unlockedBy("has_iron_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(Items.IRON_INGOT).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.ROCKET_WINDOW.get())
                .define('S', ItemInit.SILICON.get())
                .define('G', Items.GLASS_PANE)
                .pattern("SGS")
                .pattern("GSG")
                .pattern("SGS")
                .unlockedBy("has_silicon", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILICON.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.CUP.get())
                .define('I', ItemInit.ALUMINIUM_INGOT.get())
                .pattern("I I")
                .pattern("I I")
                .pattern("III")
                .unlockedBy("has_aluminium_ingot", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.ALUMINIUM_INGOT.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.COFFEE.get())
                .define('C', ItemInit.CUP.get())
                .define('B', Items.COCOA_BEANS)
                .pattern("B")
                .pattern("C")
                .unlockedBy("has_cup", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.CUP.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.THERMAL_FABRIC.get())
                .define('S', ItemInit.SILICON.get())
                .pattern("SS")
                .pattern("SS")
                .unlockedBy("has_silicon", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.SILICON.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.THERMAL_HELMET.get())
                .define('T', ItemInit.THERMAL_FABRIC.get())
                .pattern("TTT")
                .pattern("T T")
                .unlockedBy("has_thermal_fabric", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.THERMAL_FABRIC.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.THERMAL_CHESTPLATE.get())
                .define('T', ItemInit.THERMAL_FABRIC.get())
                .pattern("T T")
                .pattern("TTT")
                .pattern("TTT")
                .unlockedBy("has_thermal_fabric", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.THERMAL_FABRIC.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.THERMAL_LEGGINGS.get())
                .define('T', ItemInit.THERMAL_FABRIC.get())
                .pattern("TTT")
                .pattern("T T")
                .pattern("T T")
                .unlockedBy("has_thermal_fabric", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.THERMAL_FABRIC.get()).build()))
                .save(finishedRecipeConsumer);
        ShapedRecipeBuilder.shaped(ItemInit.THERMAL_BOOTS.get())
                .define('T', ItemInit.THERMAL_FABRIC.get())
                .pattern("T T")
                .pattern("T T")
                .unlockedBy("has_thermal_fabric", inventoryTrigger(ItemPredicate.Builder.item().of(ItemInit.THERMAL_FABRIC.get()).build()))
                .save(finishedRecipeConsumer);

    }
}
